// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  first_name String
  last_name String
  email String @unique
  password String
  role Int @default(1)
  createdAt DateTime @default(now())
  refreshToken String?
  store Store?
}

model Store{
  id Int @id @default(autoincrement())
  name String @unique
  domain String
  phone String
  email String
  owner User? @relation(fields: [ownerId], references: [id])
  ownerId Int?
  address Address?
  customization Customization?
  products Product[]
}

model Address{
  id Int @id @default(autoincrement())
  street String
  city String
  country String
  flat_number String
  postal_code String
  state String?
  type String
  createdAt DateTime @default(now())
  store Store @relation(fields: [storeId], references: [id])
  storeId Int
}

model Customization{
  id Int @id @default(autoincrement())
  logo Boolean? @default(true)
  contact Boolean? @default(true)
  about Boolean? @default(true)
  columns Int? @default(2)
  radius Int? @default(0)
  primaryBtn_color String? @default("#ffffff")
  primaryBtn_background String? @default("#3244a8")
  secondaryBtn_color String? @default("#3244a8")
  secondaryBtn_border String? @default("#3244a8")
  navigation_color String? @default("#36438a")
  main_color String? @default("#6676cc")
  footer_color String? @default("#36438a")
  instagram Boolean? @default(false)
  instagramUrl String?
  facebook Boolean? @default(false)
  facebookUrl String?
  tiktok Boolean? @default(false)
  tiktokUrl String?
  youtube Boolean? @default(false)
  youtubeUrl String?
  footer_text String?
  createdAt DateTime @default(now())
  store Store @relation(fields: [storeId], references: [id])
  storeId Int
}

model Product_template{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  name String
  description String
  price Float
  front_image String?
  back_image String?
}

model Product{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  name String
  description String
  price Float @default(0)
  margin Float @default(0)
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  front_image String
  back_image String?
  variants Product_variant[]
  store Store? @relation(fields: [storeId], references: [id])
  storeId Int?
}

model Product_variant{
  id Int @id @default(autoincrement())
  product Product @relation(fields: [product_id], references: [id])
  product_id Int
  price Float?
  color String
  size String
  front_image String?
  back_image String?
  createdAt DateTime @default(now())
}

model Category{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  name String
  description String?
  products Product[]
}